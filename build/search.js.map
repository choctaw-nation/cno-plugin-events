{"version":3,"file":"search.js","mappings":";;;;;;;;;;;;;;;AAEA,MAAMA,OAAO,GAAGC,WAAW,CAACC,OAAO;AACnC,eAAeC,WAAWA,CAAEC,OAAO,EAAG;EACrC,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,GAAGN,OAAS,EAAC,EAAE;MAC7CO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAEP,OAAO;IAC9B,CAAC,CAAE;IACH,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IACtC,OAAOD,IAAI;EACZ,CAAC,CAAC,OAAQE,KAAK,EAAG;IACjBC,OAAO,CAACD,KAAK,CAAE,oBAAoB,EAAEA,KAAK,CAAE;IAC5C,MAAMA,KAAK;EACZ;AACD;AACO,eAAeE,QAAQA,CAAA,EAAG;EAAA,IAAAC,OAAA;EAChC,MAAMC,SAAS,GAAG;IACjBC,KAAK,GAAAF,OAAA,GAAEG,MAAM,CAAEC,cAAc,CAAE,cAAAJ,OAAA,cAAAA,OAAA,GAAI,CAAC;IACpCK,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,CAAE,OAAO,CAAE;IACpBC,IAAI,EAAE;EACP,CAAC;EACD,MAAMC,KAAK,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;EAED,MAAMrB,OAAO,GAAG;IACfqB,KAAK,EAAEA,KAAK;IACZP,SAAS,EAAEA;EACZ,CAAC;EACD,IAAI;IACH,MAAMN,IAAI,GAAG,MAAMT,WAAW,CAAEC,OAAO,CAAE;IACzC,OAAOQ,IAAI;EACZ,CAAC,CAAC,OAAQc,GAAG,EAAG;IACfX,OAAO,CAACD,KAAK,CAAEY,GAAG,CAAE;EACrB;AACD;AACO,SAASC,eAAeA,CAAEf,IAAe,EAAoB;EACnE,MAAM;IACLgB,cAAc,EAAE;MAAEC,KAAK,EAAEC;IAAU;EACpC,CAAC,GAAGlB,IAAI;EACR,MAAM;IACLmB,UAAU,EAAE;MAAEF,KAAK,EAAEG;IAAK;EAC3B,CAAC,GAAGpB,IAAI;EACR,MAAM;IAAEqB,OAAO;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGvB,IAAI;EACrC,MAAM;IAAEwB;EAAW,CAAC,GAAGxB,IAAI;EAC3B,MAAM;IACLyB,aAAa,EAAE;MACdC,IAAI,EAAE;QAAEC,OAAO;QAAEC,MAAM;QAAEC,YAAY;QAAEC;MAAM;IAC9C;EACD,CAAC,GAAG9B,IAAI;EACR,MAAMY,IAAI,GAAGiB,YAAY,CAACC,KAAK,CAAE,CAAC,CAAE;EACpC,MAAMC,gBAAgB,GAAG;IACxBb,SAAS;IACTE,IAAI;IACJU,KAAK;IACLT,OAAO;IACPC,IAAI;IACJC,KAAK;IACLC,UAAU;IACVG,OAAO;IACPC,MAAM;IACNhB;EACD,CAAC;EACD,OAAOmB,gBAAgB;AACxB;;;;;;;;;;;;;;;;;;AClIuC;AACD;AAGvB,SAASG,gBAAgBA,CAAE;EACzCC,KAAK;EACLC;AAID,CAAC,EAAG;EACH,OACCC,iEAAA;IAASC,SAAS,EAAC;EAAY,GAC5BH,KAAK,CAACI,GAAG,CAAIC,IAAI,IAAM;IACxB,IAAKJ,cAAc,CAACK,MAAM,KAAK,CAAC,EAAG;MAClC,OAAOJ,iEAAA,CAACJ,mDAAU;QAACjC,IAAI,EAAGwC;MAAM,EAAG;IACpC,CAAC,MAAM,IAAKJ,cAAc,CAACK,MAAM,KAAK,CAAC,EAAG;MACzC,IACCL,cAAc,CAACM,QAAQ,CACtBF,IAAI,CAACxB,cAAc,CAACC,KAAK,CAAE,CAAC,CAAE,CAAC0B,IAAI,CACnC,IACDP,cAAc,CAACM,QAAQ,CACtBF,IAAI,CAACrB,UAAU,CAACF,KAAK,CAAE,CAAC,CAAE,CAAC0B,IAAI,CAC/B,EACA;QACD,OAAON,iEAAA,CAACJ,mDAAU;UAACjC,IAAI,EAAGwC;QAAM,EAAG;MACpC;IACD,CAAC,MAAM;MACN,IACCJ,cAAc,CAACM,QAAQ,CACtBF,IAAI,CAACxB,cAAc,CAACC,KAAK,CAAE,CAAC,CAAE,CAAC0B,IAAI,CACnC,IACDP,cAAc,CAACM,QAAQ,CACtBF,IAAI,CAACrB,UAAU,CAACF,KAAK,CAAE,CAAC,CAAE,CAAC0B,IAAI,CAC/B,EACA;QACD,OAAON,iEAAA,CAACJ,mDAAU;UAACjC,IAAI,EAAGwC;QAAM,EAAG;MACpC;IACD;EACD,CAAC,CAAE,CACM;AAEZ;;;;;;;;;;;;;;;;;;;AC1CqD;AACT;AACJ;AACzB,SAASO,SAASA,CAAE;EAClCC,OAAO;EACPZ,cAAc;EACda,iBAAiB;EACjBC,iBAAiB;EACjBC;AACD,CAAC,EAAG;EACH,MAAM,CAAEC,WAAW,EAAEC,cAAc,CAAE,GAAGT,4DAAQ,CAAE,KAAK,CAAE;EACzD,OACCP,iEAAA;IAASC,SAAS,EAAC;EAAkB,GACpCD,iEAAA;IAAKC,SAAS,EAAC;EAAW,GACzBD,iEAAA;IAAIC,SAAS,EAAC;EAAyB,GAAC,eAAa,CAAK,EAC1DD,iEAAA,CAACS,oDAAW;IACXK,MAAM,EAAGA,MAAQ;IACjBD,iBAAiB,EAAGA;EAAmB,EACtC,EACFb,iEAAA;IAAKC,SAAS,EAAC;EAA2B,GACzCD,iEAAA;IAAKC,SAAS,EAAC;EAAmC,GACjDD,iEAAA;IAAIC,SAAS,EAAC;EAAkC,GAAC,SAEjD,CAAK,EACLD,iEAAA;IACCC,SAAS,EAAC,yBAAyB;IACnCgB,OAAO,EAAGA,CAAA,KAAM;MACfD,cAAc,CAAE,CAAED,WAAW,CAAE;IAChC;EAAG,GAEDA,WAAW,GAAG,cAAc,GAAG,cAAc,CACvC,CACJ,EACJA,WAAW,IACZf,iEAAA,CAACQ,sDAAa;IACbG,OAAO,EAAGA,OAAS;IACnBZ,cAAc,EAAGA,cAAgB;IACjCa,iBAAiB,EAAGA;EAAmB,EAExC,CACI,CACD,CACG;AAEZ;;;;;;;;;;;;;;;;;AC5CuC;AAGxB,SAASJ,aAAaA,CAAE;EACtCG,OAAO;EACPZ,cAAc;EACda;AACD,CAAC,EAAG;EACH,SAASM,WAAWA,CAAEC,CAAC,EAAE;IAAEC;EAAO,CAAC,EAAG;IACrC,IAAK,CAAEA,MAAM,CAACC,EAAE,EAAG;IACnB,IAAKtB,cAAc,CAACM,QAAQ,CAAEe,MAAM,CAACC,EAAE,CAAE,EAAG;MAC3CT,iBAAiB,CAChBb,cAAc,CAACuB,MAAM,CAAIC,CAAC,IAAM;QAC/B,OAAOA,CAAC,KAAKH,MAAM,CAACC,EAAE;MACvB,CAAC,CAAE,CACH;IACF,CAAC,MAAMT,iBAAiB,CAAIY,IAAI,IAAM,CAAE,GAAGA,IAAI,EAAEJ,MAAM,CAACC,EAAE,CAAE,CAAE;EAC/D;EACA,OACCrB,iEAAA;IAAKC,SAAS,EAAC;EAA0B,GACtCU,OAAO,CAACT,GAAG,CAAE,CAAE;IAAEnB,IAAI,EAAE;MAAEuB,IAAI;MAAEK;IAAQ;EAAE,CAAC,KAAM;IACjD,OACCX,iEAAA;MACCC,SAAS,EAAC,qCAAqC;MAC/CgB,OAAO,EAAKQ,EAAE,IAAM;QACnBP,WAAW,CAAEZ,IAAI,EAAEmB,EAAE,CAAE;MACxB;IAAG,GAEHzB,iEAAA;MAAIC,SAAS,EAAC;IAAiC,GAC5CK,IAAI,CACF,EACHK,OAAO,CAACT,GAAG,CAAIoB,MAAmB,IAAM;MACzC,OACCtB,iEAAA;QAAKC,SAAS,EAAC;MAAkC,GAChDD,iEAAA;QACCjB,IAAI,EAAC,UAAU;QACfuB,IAAI,EAAGgB,MAAM,CAACrC,IAAM;QACpBoC,EAAE,EAAGC,MAAM,CAAChB,IAAM;QAClBoB,OAAO,EAAG3B,cAAc,CAACM,QAAQ,CAChCiB,MAAM,CAAChB,IAAI,CACT;QACHqB,QAAQ,EAAGA,CAAA,KAAM,CAAC;MAAG,EACpB,EACF3B,iEAAA;QAAO4B,OAAO,EAAGN,MAAM,CAAChB;MAAM,GAC3BgB,MAAM,CAAChB,IAAI,CACN,CACH;IAER,CAAC,CAAE,CACE;EAER,CAAC,CAAE,CACE;AAER;;;;;;;;;;;;;;;;;ACtDe,SAASG,WAAWA,CAAE;EAAEK,MAAM;EAAED;AAAkB,CAAC,EAAG;EACpE,OACCb,iEAAA;IACCjB,IAAI,EAAC,MAAM;IACXuB,IAAI,EAAC,QAAQ;IACbe,EAAE,EAAC,QAAQ;IACXQ,WAAW,EAAC,eAAe;IAC3B5B,SAAS,EAAC,8BAA8B;IACxC6B,KAAK,EAAGhB,MAAQ;IAChBa,QAAQ,EAAGd;EAAmB,EAC7B;AAEJ;;;;;;;;;;;;;;;;;ACZuC;AAGxB,SAASjB,UAAUA,CAAC;EAAEjC;AAAgC,CAAC,EAAE;EACvE,MAAM;IAAEkB,SAAS;IAAEK,KAAK;IAAEC,UAAU;IAAEG,OAAO;IAAEC,MAAM;IAAEhB,IAAI;IAAEkB,KAAK;IAAEV;EAAK,CAAC,GACzEpB,IAAI;EAEL,OACCqC,iEAAA;IAASC,SAAS,EAAC;EAAW,GAC7BD,iEAAA;IAAQC,SAAS,EAAC;EAAkB,GACnCD,iEAAA;IACC+B,KAAK,EAAExD,IAAI,CAACwD,KAAM;IAClBC,MAAM,EAAEzD,IAAI,CAACyD,MAAO;IACpBC,GAAG,EAAC,EAAE;IACNhC,SAAS,EAAC,2CAA2C;IACrDiC,GAAG,EAAE5C,OAAQ;IACb6C,QAAQ,EAAC,OAAO;IAChB5C,MAAM,EAAEA,MAAO;IACfE,KAAK,EAAEA;EAAM,EACZ,CACM,EACTO,iEAAA,aAAKd,KAAK,CAAM,EAChBc,iEAAA;IAAOC,SAAS,EAAC;EAAY,GAC5BD,iEAAA;IAAKC,SAAS,EAAC;EAAiB,GAC/BD,iEAAA,iBAAQ,QAAM,CAAS,EACtBb,UAAU,CAACiD,IAAI,CAACC,GAAG,EAAC,eACtB,CAAM,EACLxD,SAAS,CAACuB,MAAM,GAAG,CAAC,IACpBJ,iEAAA;IAAKC,SAAS,EAAC;EAAsB,GACpCD,iEAAA,iBAAQ,QAAM,CAAS,EAAC,GAAG,EAC3BA,iEAAA;IAAGsC,IAAI,EAAEzD,SAAS,CAAC,CAAC,CAAC,CAACI,IAAK;IAACsD,GAAG,EAAC;EAAK,GACnC1D,SAAS,CAAC,CAAC,CAAC,CAACyB,IAAI,CACf,CAEL,EACDN,iEAAA;IAAKC,SAAS,EAAC;EAAwB,GACtCD,iEAAA,iBAAQ,aAAW,CAAS,EAC3B,GAAG,GAAGb,UAAU,CAACiD,IAAI,CAACI,SAAS,CAC3B,EACLrD,UAAU,CAACiD,IAAI,CAACK,OAAO,IACvBzC,iEAAA;IAAKC,SAAS,EAAC;EAAsB,GACpCD,iEAAA,iBAAQ,WAAS,CAAS,KAAC,EAACb,UAAU,CAACiD,IAAI,CAACK,OAAO,CAEpD,EACDzC,iEAAA;IAAKC,SAAS,EAAC;EAAkB,GAChCD,iEAAA,iBAAQ,aAAW,CAAS,EAAC,GAAG,EAChCA,iEAAA;IAAGsC,IAAI,EAAC,iBAAiB;IAACC,GAAG,EAAC;EAAK,GACjCxD,IAAI,CAAC,CAAC,CAAC,CAACuB,IAAI,CACV,CACC,CACC,EACRN,iEAAA;IAAKC,SAAS,EAAC;EAAO,GAAEd,UAAU,CAACuD,WAAW,CAAO,CAC5C;AAEZ;;;;;;;;;;;;;;ACtDO,MAAMC,eAAe,GAAG;EAC9BC,IAAI,EAAE,CACL;IAAEtC,IAAI,EAAE,OAAO;IAAEuC,MAAM,EAAE;EAAE,CAAC,EAC5B;IAAEvC,IAAI,EAAE,wBAAwB;IAAEuC,MAAM,EAAE;EAAI,CAAC,EAC/C;IAAEvC,IAAI,EAAE,qBAAqB;IAAEuC,MAAM,EAAE;EAAK,CAAC,EAC7C;IAAEvC,IAAI,EAAE,WAAW;IAAEuC,MAAM,EAAE;EAAI,CAAC,EAClC;IAAEvC,IAAI,EAAE,gBAAgB;IAAEuC,MAAM,EAAE;EAAI,CAAC;AAEzC,CAAC;;;;;;;;;;;;;;;;;;ACRsC;AACC;AACzB,SAASC,cAAcA,CAAA,EAAG;EACxC,MAAMC,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EAC3B,OACC/C,iEAAA;IAAKC,SAAS,EAAC;EAAU,GACtB8C,IAAI,CAAC7C,GAAG,CAAI8C,GAAG,IAChBhD,iEAAA,aACA,CAAE,CACE;AAER;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,2BAA2B,IAAI;;AAE/B;AACA,mCAAmC,IAAI;;AAEvC,kDAAkD,MAAM;;AAExD;AACA,+BAA+B,IAAI;;AAEnC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,2BAA2B;;AAEpD;AACA,kBAAkB,wBAAwB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,YAAY;AACZ;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,iEAAiE;AACrE;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,iEAAiE;AACrE;AACA,UAAU,gBAAgB;AAC1B,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,gBAAgB;AAClC,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,yBAAyB,YAAY;AACrC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,YAAY,kCAAkC;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA,2BAA2B,+BAA+B;AAC1D,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,kCAAkC;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,UAAU;AACnD;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,UAAU;AACzD;AACA,gBAAgB,0BAA0B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,iCAAiC,cAAc,IAAI;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,8BAA8B,kBAAkB;AAChD;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,iBAAiB;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,MAAM;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,gCAAgC;AAChC,qBAAqB;;AAErB;AACA;AACA;AACA,MAAM,EAED;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,aAAa,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,iBAAiB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA,cAAc,0BAA0B;;AAExC;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,gBAAgB,kBAAkB;;AAElC;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,gCAAgC,SAAS;AACzC;AACA,WAAW;AACX;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA,gBAAgB,0BAA0B;;AAE1C;AAC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","sources":["webpack://cno-events/./src/js/search/DataHandler.ts","webpack://cno-events/./src/js/search/Presentational/ResultsContainer.tsx","webpack://cno-events/./src/js/search/Presentational/SearchBar.jsx","webpack://cno-events/./src/js/search/Presentational/SearchFilters.tsx","webpack://cno-events/./src/js/search/Presentational/SearchInput.jsx","webpack://cno-events/./src/js/search/Presentational/SinglePost.tsx","webpack://cno-events/./src/js/search/fuse-config.js","webpack://cno-events/./src/js/spinner.jsx","webpack://cno-events/./node_modules/fuse.js/dist/fuse.esm.js","webpack://cno-events/./src/styles/loading-spinner.scss","webpack://cno-events/external window [\"wp\",\"element\"]","webpack://cno-events/webpack/bootstrap","webpack://cno-events/webpack/runtime/compat get default export","webpack://cno-events/webpack/runtime/define property getters","webpack://cno-events/webpack/runtime/hasOwnProperty shorthand","webpack://cno-events/webpack/runtime/make namespace object","webpack://cno-events/./src/js/search/App.tsx"],"sourcesContent":["import { EventPost, PrettyEventData } from './types';\n\nconst graphQL = cnoSiteData.rootUrl;\nasync function makeRequest( request ) {\n\ttry {\n\t\tconst response = await fetch( `${ graphQL }`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify( request ),\n\t\t} );\n\t\tconst { data } = await response.json();\n\t\treturn data;\n\t} catch ( error ) {\n\t\tconsole.error( 'makeRequest error:', error );\n\t\tthrow error;\n\t}\n}\nexport async function getPosts() {\n\tconst variables = {\n\t\tfirst: Number( POSTS_PER_PAGE ) ?? 4,\n\t\tafter: '',\n\t\tinclude: [ 'LARGE' ],\n\t\tsize: 'LARGE',\n\t};\n\tconst query = `query Events($first: Int = 4, $after: String = \"\", $include: [MediaItemSizeEnum] = [LARGE], $size: MediaItemSizeEnum = LARGE) {\n  events(after: $after, first: $first) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes {\n      eventLocations {\n        nodes {\n          name\n          link\n          event_locationId\n        }\n      }\n      event_info {\n        description\n        info {\n          day\n          endTime\n          startTime\n        }\n      }\n      featuredImage {\n        node {\n          altText\n          mediaDetails {\n            sizes(include: $include) {\n              height\n              name\n              width\n              sourceUrl\n            }\n          }\n          srcSet(size: $size)\n\t\t  sizes(size: $size)\n        }\n      }\n      title(format: RENDERED)\n      link\n\t  eventId\n      eventTypes {\n        nodes {\n          event_typeId\n          name\n          link\n        }\n      }\n    }\n  }\n  eventTypes {\n    nodes {\n      event_typeId\n      name\n\t  link\n    }\n  }\n  eventLocations {\n    nodes {\n      name\n      link\n      event_locationId\n    }\n  }\n}`;\n\n\tconst request = {\n\t\tquery: query,\n\t\tvariables: variables,\n\t};\n\ttry {\n\t\tconst data = await makeRequest( request );\n\t\treturn data;\n\t} catch ( err ) {\n\t\tconsole.error( err );\n\t}\n}\nexport function destructureData( data: EventPost ): PrettyEventData {\n\tconst {\n\t\teventLocations: { nodes: locations },\n\t} = data;\n\tconst {\n\t\teventTypes: { nodes: type },\n\t} = data;\n\tconst { eventId, link, title } = data;\n\tconst { event_info } = data;\n\tconst {\n\t\tfeaturedImage: {\n\t\t\tnode: { altText, srcSet, mediaDetails, sizes },\n\t\t},\n\t} = data;\n\tconst size = mediaDetails.sizes[ 0 ];\n\tconst destructuredData = {\n\t\tlocations,\n\t\ttype,\n\t\tsizes,\n\t\teventId,\n\t\tlink,\n\t\ttitle,\n\t\tevent_info,\n\t\taltText,\n\t\tsrcSet,\n\t\tsize,\n\t};\n\treturn destructuredData;\n}\n","import React from '@wordpress/element';\nimport SinglePost from './SinglePost';\nimport { EventPost } from '../types';\n\nexport default function ResultsContainer( {\n\tposts,\n\tcheckedFilters,\n}: {\n\tposts: EventPost[];\n\tcheckedFilters: string[];\n} ) {\n\treturn (\n\t\t<section className=\"cno-events\">\n\t\t\t{ posts.map( ( post ) => {\n\t\t\t\tif ( checkedFilters.length === 0 ) {\n\t\t\t\t\treturn <SinglePost data={ post } />;\n\t\t\t\t} else if ( checkedFilters.length === 1 ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcheckedFilters.includes(\n\t\t\t\t\t\t\tpost.eventLocations.nodes[ 0 ].name\n\t\t\t\t\t\t) ||\n\t\t\t\t\t\tcheckedFilters.includes(\n\t\t\t\t\t\t\tpost.eventTypes.nodes[ 0 ].name\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn <SinglePost data={ post } />;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcheckedFilters.includes(\n\t\t\t\t\t\t\tpost.eventLocations.nodes[ 0 ].name\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\tcheckedFilters.includes(\n\t\t\t\t\t\t\tpost.eventTypes.nodes[ 0 ].name\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn <SinglePost data={ post } />;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) }\n\t\t</section>\n\t);\n}\n","import React, { useState } from '@wordpress/element';\nimport SearchFilters from './SearchFilters';\nimport SearchInput from './SearchInput';\nexport default function SearchBar( {\n\tfilters,\n\tcheckedFilters,\n\tsetCheckedFilters,\n\thandleSearchInput,\n\tsearch,\n} ) {\n\tconst [ showFilters, setShowFilters ] = useState( false );\n\treturn (\n\t\t<section className=\"cno-event-search\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<h2 className=\"cno-event-search__title\">Search Events</h2>\n\t\t\t\t<SearchInput\n\t\t\t\t\tsearch={ search }\n\t\t\t\t\thandleSearchInput={ handleSearchInput }\n\t\t\t\t/>\n\t\t\t\t<div className=\"cno-event-search__filters\">\n\t\t\t\t\t<div className=\"cno-event-search__filters--header\">\n\t\t\t\t\t\t<h3 className=\"cno-event-search__filters--title\">\n\t\t\t\t\t\t\tFilters\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn__outline--secondary\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tsetShowFilters( ! showFilters );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ showFilters ? 'Hide Filters' : 'Show Filters' }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ showFilters && (\n\t\t\t\t\t\t<SearchFilters\n\t\t\t\t\t\t\tfilters={ filters }\n\t\t\t\t\t\t\tcheckedFilters={ checkedFilters }\n\t\t\t\t\t\t\tsetCheckedFilters={ setCheckedFilters }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import React from '@wordpress/element';\nimport { EventFilter } from '../types';\n\nexport default function SearchFilters( {\n\tfilters,\n\tcheckedFilters,\n\tsetCheckedFilters,\n} ) {\n\tfunction handleClick( x, { target } ) {\n\t\tif ( ! target.id ) return;\n\t\tif ( checkedFilters.includes( target.id ) ) {\n\t\t\tsetCheckedFilters(\n\t\t\t\tcheckedFilters.filter( ( f ) => {\n\t\t\t\t\treturn f !== target.id;\n\t\t\t\t} )\n\t\t\t);\n\t\t} else setCheckedFilters( ( prev ) => [ ...prev, target.id ] );\n\t}\n\treturn (\n\t\t<div className=\"cno-event-search-filters\">\n\t\t\t{ filters.map( ( { type: { name, filters } } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"cno-event-search-filters__container\"\n\t\t\t\t\t\tonClick={ ( ev ) => {\n\t\t\t\t\t\t\thandleClick( name, ev );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<h4 className=\"cno-event-search-filters__title\">\n\t\t\t\t\t\t\t{ name }\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t{ filters.map( ( filter: EventFilter ) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"cno-event-search-filters__filter\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tname={ filter.link }\n\t\t\t\t\t\t\t\t\t\tid={ filter.name }\n\t\t\t\t\t\t\t\t\t\tchecked={ checkedFilters.includes(\n\t\t\t\t\t\t\t\t\t\t\tfilter.name\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\tonChange={ () => {} }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label htmlFor={ filter.name }>\n\t\t\t\t\t\t\t\t\t\t{ filter.name }\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n}\n","export default function SearchInput( { search, handleSearchInput } ) {\n\treturn (\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tname=\"search\"\n\t\t\tid=\"search\"\n\t\t\tplaceholder=\"Find an Event\"\n\t\t\tclassName=\"cno-event-search__search-bar\"\n\t\t\tvalue={ search }\n\t\t\tonChange={ handleSearchInput }\n\t\t/>\n\t);\n}\n","import React from '@wordpress/element';\nimport { PrettyEventData } from '../types';\n\nexport default function SinglePost({ data }: { data: PrettyEventData }) {\n\tconst { locations, title, event_info, altText, srcSet, size, sizes, type } =\n\t\tdata;\n\n\treturn (\n\t\t<article className=\"cno-event\">\n\t\t\t<figure className=\"cno-event__image\">\n\t\t\t\t<img\n\t\t\t\t\twidth={size.width}\n\t\t\t\t\theight={size.height}\n\t\t\t\t\tsrc=\"\"\n\t\t\t\t\tclassName=\"attachment-large size-large wp-post-image\"\n\t\t\t\t\talt={altText}\n\t\t\t\t\tdecoding=\"async\"\n\t\t\t\t\tsrcSet={srcSet}\n\t\t\t\t\tsizes={sizes}\n\t\t\t\t/>\n\t\t\t</figure>\n\t\t\t<h2>{title}</h2>\n\t\t\t<aside className=\"event-meta\">\n\t\t\t\t<div className=\"event-meta__day\">\n\t\t\t\t\t<strong>When: </strong>\n\t\t\t\t\t{event_info.info.day}, September 1\n\t\t\t\t</div>\n\t\t\t\t{locations.length > 0 && (\n\t\t\t\t\t<div className=\"event-meta__location\">\n\t\t\t\t\t\t<strong>Where:</strong>{' '}\n\t\t\t\t\t\t<a href={locations[0].link} rel=\"tag\">\n\t\t\t\t\t\t\t{locations[0].name}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"event-meta__start-time\">\n\t\t\t\t\t<strong>Start Time:</strong>\n\t\t\t\t\t{' ' + event_info.info.startTime}\n\t\t\t\t</div>\n\t\t\t\t{event_info.info.endTime && (\n\t\t\t\t\t<div className=\"event-meta__end-time\">\n\t\t\t\t\t\t<strong>End Time:</strong> {event_info.info.endTime}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"event-meta__type\">\n\t\t\t\t\t<strong>Event Type:</strong>{' '}\n\t\t\t\t\t<a href=\"${type[0].link}\" rel=\"tag\">\n\t\t\t\t\t\t{type[0].name}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</aside>\n\t\t\t<div className=\"about\">{event_info.description}</div>\n\t\t</article>\n\t);\n}\n","export const fuzzySearchKeys = {\n\tkeys: [\n\t\t{ name: 'title', weight: 1 },\n\t\t{ name: 'event_info.description', weight: 0.5 },\n\t\t{ name: 'event_info.info.day', weight: 0.03 },\n\t\t{ name: 'type.name', weight: 0.8 },\n\t\t{ name: 'locations.name', weight: 0.8 },\n\t],\n};\n","import React from '@wordpress/element';\nimport '../styles/loading-spinner.scss';\nexport default function LoadingSpinner() {\n\tconst divs = [ 1, 2, 3, 4 ];\n\treturn (\n\t\t<div className=\"lds-ring\">\n\t\t\t{ divs.map( ( div ) => (\n\t\t\t\t<div />\n\t\t\t) ) }\n\t\t</div>\n\t);\n}\n","/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { useState, useEffect, createRoot } from '@wordpress/element';\nimport LoadingSpinner from '../spinner';\nimport Fuse from 'fuse.js';\nimport { fuzzySearchKeys } from './fuse-config';\nimport { EventPost, EventFilters } from './types';\nimport { getPosts, destructureData } from './DataHandler';\nimport SearchBar from './Presentational/SearchBar';\nimport ResultsContainer from './Presentational/ResultsContainer';\n\nfunction App() {\n\tconst [ isLoading, setIsLoading ] = useState( true );\n\tconst [ posts, setPosts ] = useState< Array< EventPost > >( [] );\n\tconst [ filters, setFilters ] = useState< Array< EventFilters > >( [] );\n\tconst [ search, setSearch ] = useState( '' );\n\tuseEffect( () => {\n\t\tif ( search === '' ) {\n\t\t\tgetPosts().then( ( { eventLocations, eventTypes, events } ) => {\n\t\t\t\tsetPosts(\n\t\t\t\t\tevents.nodes.map( ( node ) => {\n\t\t\t\t\t\treturn destructureData( node );\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tsetIsLoading( false );\n\t\t\t} );\n\t\t}\n\t}, [ search ] );\n\n\tfunction handleSearchInput( { target } ) {\n\t\tsetSearch( target.value );\n\t}\n\tuseEffect( () => {\n\t\tif ( '' === search ) return;\n\t\tsetIsLoading( true );\n\t\tconst timeout = setTimeout( () => {\n\t\t\tconst fuse = new Fuse( posts, {\n\t\t\t\t...fuzzySearchKeys,\n\t\t\t} );\n\t\t\tconst results = fuse.search( search );\n\t\t\tsetPosts( results.map( ( result ) => result.item ) );\n\t\t\tsetIsLoading( false );\n\t\t}, 500 );\n\t\treturn () => clearTimeout( timeout );\n\t}, [ search ] );\n\tconst [ checkedFilters, setCheckedFilters ] = useState< string[] >( [] );\n\treturn (\n\t\t<div className=\"cno-search\">\n\t\t\t<SearchBar\n\t\t\t\tfilters={ filters }\n\t\t\t\tsearch={ search }\n\t\t\t\tcheckedFilters={ checkedFilters }\n\t\t\t\tsetCheckedFilters={ setCheckedFilters }\n\t\t\t\thandleSearchInput={ handleSearchInput }\n\t\t\t/>\n\t\t\t<div className=\"container\">\n\t\t\t\t{ ! isLoading ? (\n\t\t\t\t\t<ResultsContainer\n\t\t\t\t\t\tposts={ posts }\n\t\t\t\t\t\tcheckedFilters={ checkedFilters }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nconst root = document.getElementById( 'app' );\nif ( root ) createRoot( root ).render( <App /> );\n"],"names":["graphQL","cnoSiteData","rootUrl","makeRequest","request","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","getPosts","_Number","variables","first","Number","POSTS_PER_PAGE","after","include","size","query","err","destructureData","eventLocations","nodes","locations","eventTypes","type","eventId","link","title","event_info","featuredImage","node","altText","srcSet","mediaDetails","sizes","destructuredData","React","SinglePost","ResultsContainer","posts","checkedFilters","createElement","className","map","post","length","includes","name","useState","SearchFilters","SearchInput","SearchBar","filters","setCheckedFilters","handleSearchInput","search","showFilters","setShowFilters","onClick","handleClick","x","target","id","filter","f","prev","ev","checked","onChange","htmlFor","placeholder","value","width","height","src","alt","decoding","info","day","href","rel","startTime","endTime","description","fuzzySearchKeys","keys","weight","LoadingSpinner","divs","div","useEffect","createRoot","Fuse","App","isLoading","setIsLoading","setPosts","setFilters","setSearch","then","events","timeout","setTimeout","fuse","results","result","item","clearTimeout","root","document","getElementById","render"],"sourceRoot":""}